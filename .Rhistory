param_df = data %>% group_by(subject, time) %>% dplyr::select(light, param) %>% summarise(light = first(light), param = aggregate_by(param)(get(param)))
cumulative_df = param_df %>% group_by(subject) %>% group_modify(~data.frame(cs = cumsum(.x$param)))
return(cbind.data.frame(param_df, cumulative_df, param))
}
aggregate_paramter_2(data_aggdf, "t360", "vo2")
aggregate_paramter_2 = function(data, time, param) {
print(data)
param_df = data %>% group_by(subject, sym(time)) %>% dplyr::select(light, param) %>% summarise(light = first(light), param = aggregate_by(param)(get(param)))
cumulative_df = param_df %>% group_by(subject) %>% group_modify(~data.frame(cs = cumsum(.x$param)))
return(cbind.data.frame(param_df, cumulative_df, param))
}
aggregate_paramter_2(data_aggdf, "t360", "vo2")
aggregate_paramter_2 = function(data, time, param) {
print(data)
param_df = data %>% group_by(subject, get(time)) %>% dplyr::select(light, param) %>% summarise(light = first(light), param = aggregate_by(param)(get(param)))
cumulative_df = param_df %>% group_by(subject) %>% group_modify(~data.frame(cs = cumsum(.x$param)))
return(cbind.data.frame(param_df, cumulative_df, param))
}
aggregate_paramter_2(data_aggdf, "t360", "vo2")
aggregate_paramter_2 = function(data, time, param) {
param_df = data %>% group_by(subject, get(time)) %>% dplyr::select(light, param) %>% summarise(light = first(light), param = aggregate_by(param)(get(param)))
cumulative_df = param_df %>% group_by(subject) %>% group_modify(~data.frame(cumulative = cumsum(.x$param)))
return(cbind.data.frame(param_df, cumulative_df, param))
}
aggregate_paramter_2(data_aggdf, "t360", "vo2")
aggregate_paramter_2 = function(data, time, param) {
sym_time = get(time)
param_df = data %>% group_by(subject, sym_time) %>% dplyr::select(subject, sym_time, light, param) %>%
summarise(light = first(light), param = aggregate_by(param)(get(param)))
cumulative_df = param_df %>% group_by(subject) %>% group_modify(~data.frame(cumulative = cumsum(.x$param)))
return(cbind.data.frame(param_df, cumulative_df, param))
}
aggregate_paramter_2(data_aggdf, "t360", "vo2")
aggregate_paramter_2 = function(data, time, param) {
param_df = data %>% group_by(subject, get(time)) %>% dplyr::select(subject, get(time), light, param) %>%
summarise(light = first(light), param = aggregate_by(param)(get(param)))
cumulative_df = param_df %>% group_by(subject) %>% group_modify(~data.frame(cumulative = cumsum(.x$param)))
return(cbind.data.frame(param_df, cumulative_df, param))
}
aggregate_paramter_2(data_aggdf, "t360", "vo2")
aggregate_paramter_2(data_aggdf, t360, "vo2")
aggregate_paramter_2 = function(data, time, param) {
param_df = data %>% group_by(subject, time) %>% dplyr::select(light, param) %>%
summarise(light = first(light), param = aggregate_by(param)(get(param)))
cumulative_df = param_df %>% group_by(subject) %>% group_modify(~data.frame(cumulative = cumsum(.x$param)))
return(cbind.data.frame(param_df, cumulative_df, param))
}
aggregate_paramter_2(data_aggdf, t360, "vo2")
aggregate_paramter_2 = function(data, time, param) {
param_df = data %>% group_by(subject, {{time}} ) %>% dplyr::select(light, param) %>%
summarise(light = first(light), param = aggregate_by(param)(get(param)))
cumulative_df = param_df %>% group_by(subject) %>% group_modify(~data.frame(cumulative = cumsum(.x$param)))
return(cbind.data.frame(param_df, cumulative_df, param))
}
aggregate_paramter_2(data_aggdf, t360, "vo2")
aggregate_paramter_2 = function(data, time, param) {
param_df = data %>% group_by(subject, {{time}} ) %>%
dplyr::select(light, param) %>%
summarise(light = first(light), param = aggregate_by(param)(get(param)))
cumulative_df = param_df %>% group_by(subject) %>%
group_modify(~data.frame(cumulative = cumsum(.x$param))) %>%
ungroup() %>%
select(cumulative)
return(cbind.data.frame(param_df, cumulative_df, param))
}
aggregate_paramter_2(data_aggdf, t360, "vo2")
aggregate_paramter_2 = function(data, time, param) {
param_df = data %>% group_by(subject, get(time) ) %>%
dplyr::select(light, param) %>%
summarise(light = first(light), param = aggregate_by(param)(get(param)))
cumulative_df = param_df %>% group_by(subject) %>%
group_modify(~data.frame(cumulative = cumsum(.x$param))) %>%
ungroup() %>%
select(cumulative)
return(cbind.data.frame(param_df, cumulative_df, param))
}
aggregate_paramter_2(data_aggdf, t360, "vo2")
aggregate_paramter_2(data_aggdf, "t360", "vo2")
aggregate_paramter_2 = function(data, time, param) {
param_df = data %>% group_by(subject, interval = get(time)) %>%
dplyr::select(light, param) %>%
summarise(light = first(light), param = aggregate_by(param)(get(param)))
cumulative_df = param_df %>% group_by(subject) %>%
group_modify(~data.frame(cumulative = cumsum(.x$param))) %>%
ungroup() %>%
select(cumulative)
return(cbind.data.frame(param_df, cumulative_df, param))
}
aggregate_paramter_2(data_aggdf, "t360", "vo2")
aggregate_paramter_2 = function(data, time, param) {
param_df = data %>% group_by(subject, interval = get(time)) %>%
dplyr::select(subject, interval, light, param) %>%
summarise(light = first(light), param = aggregate_by(param)(get(param)))
cumulative_df = param_df %>% group_by(subject) %>%
group_modify(~data.frame(cumulative = cumsum(.x$param))) %>%
ungroup() %>%
select(cumulative)
return(cbind.data.frame(param_df, cumulative_df, param))
}
aggregate_paramter_2 = function(data, time, param) {
param_df = data %>% group_by(subject, interval = get(time)) %>%
dplyr::select(subject, interval, light, param) %>%
summarise(light = first(light), param = aggregate_by(param)(get(param)))
cumulative_df = param_df %>% group_by(subject) %>%
group_modify(~data.frame(cumulative = cumsum(.x$param))) %>%
ungroup() %>%
select(cumulative)
return(cbind.data.frame(param_df, cumulative_df, param))
}
aggregate_paramter_2(data_aggdf, "t360", "vo2")
aggregate_paramter_2 = function(data, time, param) {
param_df = data %>% group_by(subject, interval = get(time)) %>%
dplyr::select(subject, interval, light, param) %>%
summarise(light = first(light), value = aggregate_by(param)(get(param)))
cumulative_df = param_df %>% group_by(subject) %>%
group_modify(~data.frame(cumulative = cumsum(.x$param))) %>%
ungroup() %>%
select(cumulative)
return(cbind.data.frame(param_df, cumulative_df, param))
}
aggregate_paramter_2(data_aggdf, "t360", "vo2")
aggregate_paramter_2 = function(data, time, param) {
param_df = data %>% group_by(subject, interval = get(time)) %>%
dplyr::select(subject, interval, light, param) %>%
summarise(light = first(light), param = aggregate_by(param)(get(param)))
cumulative_df = param_df %>% group_by(subject) %>%
group_modify(~data.frame(cumulative = cumsum(.x$param))) %>%
ungroup() %>%
select(cumulative)
return(cbind.data.frame(param_df, cumulative_df, param))
}
aggregate_paramter_2(data_aggdf, "t360", "vo2")
aggregate_paramter_2 = function(data, time, param) {
param_df = data %>% group_by(subject, interval = get(time)) %>%
dplyr::select(subject, interval, light, param) %>%
summarise(light = first(light), val = aggregate_by(param)(get(param)))
cumulative_df = param_df %>% group_by(subject) %>%
group_modify(~data.frame(cumulative = cumsum(.x$param))) %>%
ungroup() %>%
select(cumulative)
return(cbind.data.frame(param_df, cumulative_df, param))
}
aggregate_paramter_2(data_aggdf, "t360", "vo2")
warnings()
View(data_aggdf)
aggregate_paramter_2 = function(data, time, param) {
param_df = data %>% group_by(subject, interval = get(time)) %>%
dplyr::select(subject, interval, light, param) %>%
summarise(light = first(light), value = aggregate_by(param)(get(param)))
cumulative_df = param_df %>% group_by(subject) %>%
group_modify(~data.frame(cumulative = cumsum(.x$value))) %>%
ungroup() %>%
select(cumulative)
return(cbind.data.frame(param_df, cumulative_df, param))
}
aggregate_paramter_2(data_aggdf, "t360", "vo2")
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
data_aggdf
setDT(data_aggdf)[.(light = first(light),
date_time = first(date_time),
param = mean("vo2")),
by = list(interval = t360)]
setDT(data_aggdf)[,.(light = first(light),
date_time = first(date_time),
param = mean("vo2")),
by = list(interval = t360)]
setDT(data_aggdf)[,.(light = first(light),
param = mean("vo2")),
by = t360]
data_aggdf
setDT(data_aggdf)[,.(light = first(light),
param = mean(vo2)),
by = t360]
setDT(data_aggdf)[,.(light = first(light),
param = mean(vo2)),
by = .(subject, t360)]
setDT(data_aggdf)[,.(light = first(light),
param = mean(vo2)),
cumulative = cumsum(vo2),
by = .(subject, interval = t360)]
setDT(data_aggdf)[,.(light = first(light),
param = mean(vo2),
cumulative = cumsum(vo2)),
by = .(subject, interval = t360)]
setDT(data_aggdf)[,.(light = first(light),
param = mean(vo2),
cumulative = cumsum(vo2)),
by = .(subject, t360)]
setDT(data_aggdf)[,.(light = first(light),
param = mean(vo2)),
by = .(subject, t360)]
setDT(data_aggdf)[,.(light = first(light),
param = mean(vo2)),
by = .(subject, t720)]
setDT(data_aggdf)[,.(light = first(light),
param = mean(vo2),
cs = sum(vo2)),
by = .(subject, t720)]
setDT(data_aggdf)[,.(light = first(light),
param = mean(vo2),
cs = sum(param)),
by = .(subject, t720)]
setDT(data_aggdf)[,.(light = first(light),
param = mean(vo2)),
by = .(subject, interval = t720)]
setDT(data_aggdf)[,.(light = first(light),
value = mean(vo2),
param = "vo2"),
by = .(subject, interval = t720)]
aggregate_parameter = function(data, time, param) {
setDT(data_aggdf)[,.(light = first(light),
value = mean(get(param)),
param = param),
by = .(subject, interval = get(time))]
}
aggregate_parameter = function(data, time, param) {
setDT(data_aggdf)[,.(light = first(light),
value = mean(vo2),
param = "vo2"),
by = .(subject, interval = t720)]
}
aggregate_parameter(data_aggdf, "t720", "vo2")
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
num_parameters
num_parameters = 2
pp = c("vo2", "rer", "xyt")
aggregated_df = map_dfr(seq_along(num_parameters),
~ aggregate_parameter(data_aggdf,
"t720",
pp[[.x]]))
View(aggregated_df)
seq_along(num_parameters)
num_parameters
num_parameters = 3
seq(num_parameters)
aggregated_df = map_dfr(seq(num_parameters),
~ aggregate_parameter(data_aggdf,
"t720",
pp[[.x]]))
View(aggregated_df)
pp[©]
pp[[1]]
pp[[2]]
pp[[3]]
aggregate_parameter
map_dfr(seq(num_parameters),
~ aggregate_parameter(data_aggdf,
"t720",
pp[.x]))
seq(num_parameters)
map(seq(num_parameters),
~ aggregate_parameter(data_aggdf,
"t720",
pp[.x]))
param
map(seq(num_parameters), ~ print(pp[.x])
)
map(seq(num_parameters), ~ pp[.x])
map(seq(num_parameters), ~ pp[[.x]])
map(seq(num_parameters),
~ aggregate_parameter(data_aggdf,
"t720",
pp[[.x]]))
lapply(seq(num_parameters),
~ aggregate_parameter(data_aggdf,
"t720",
pp[[.x]]))
map_chr(seq(num_parameters),
~ aggregate_parameter(data_aggdf,
"t720",
pp[[.x]]))
pp
map_dfr(pp,
~ aggregate_parameter(data_aggdf,
"t720",
.x))
map(pp,
~ aggregate_parameter(data_aggdf,
"t720",
.x))
aggregate_parameter = function(data, time, param) {
setDT(data)[,.(light = first(light),
value = mean(get(param)),
param = param),
by = .(subject, interval = get(time))]
}
aggregate_parameter = function(data, time, param) {
print(param)
setDT(data)[,.(light = first(light),
value = mean(get(param)),
param = param),
by = .(subject, interval = get(time))]
}
map(pp,
~ aggregate_parameter(data_aggdf,
"t720",
.x))
map_dfr(pp,
~ aggregate_parameter(data_aggdf,
"t720",
.x))
runApp()
pp
pp - "vo2"
setdiff(pp, "vo2")
runApp()
runApp()
runApp()
seq_len(3)
runApp()
runApp()
runApp()
setdiff(pp, "")
setdiff(pp, "xyt")
setdiff(pp, c("xyt", "rer"))
c(pp, "z")
runApp()
runApp()
parameters = column_specs %>% dplyr::filter(parameter == 1) %>% select(name_app) %>% pull
parameters
setdiff(parameters, pp)
runApp()
runApp()
runApp()
runApp()
?reactiveVal
paste("stage", 1:5, sep = "")
select_input_names <- paste("select_parameter", 1:5, sep = "")
select_input_names
select_input_names <- paste("select_parameter_", 1:5, sep = "")
select_input_names
stages <- reactive(lapply(select_input_names, function(name) input[[name]]))
unlist(stages())
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
global_parameters
paramters
parameters
runApp()
?trimws
pp
trimws(pp)
runApp()
parameters
pp2 = c("heat  ", "vo2 ", " xyt")
trimws(pp2)
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
updateSelectInput
?updateSelectInput
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
?selectizeInput
runApp()
runApp()
runApp()
runApp()
parameters = column_specs %>% dplyr::filter(parameter == 1) %>% select(name_app) %>% pull
parameters
names(parameters) = column_specs %>% filter(parameter == 1) %>% select(display_app) %>% pull
parameters
setdiff(parameters, "vo2")
parameters["vo2"]
parameters == "vo2"
parameters == c("vo2", "rer")
parameters == c("rer")
parameters == c("rer", "vo2")
c("vo2", "rer") %in%parameters
parameters %in% c("vo2", "rer")
parameters[parameters %in% c("vo2", "rer")]
setdiff(parameters[parameters %in% c("vo2", "rer")], parameters)
setdiff(parameters, parameters[parameters %in% c("vo2", "rer")])
?setdiff
parameters[parameters %in% c("vo2", "rer")]
parameters[!parameters %in% c("vo2", "rer")]
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
# Create the checkboxes and select them all by default
if(is.integer(input$select_no_groups)) {
map(1:as.integer(input$select_no_groups), function(i) {
isolate(textInput(paste0("group_no_", i), label = paste0("Group: ", i), value = input[[paste0("group_no_", as.character(i))]]))
})
}
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
renderPlot
?renderPlot
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
pp = vapply(1:num_parameters, function(x) {input[[paste0("select_parameter_", x)]]}, character(1))
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
rlang::last_error()
runApp()
rlang::last_error()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
shiny::runApp(display.mode="showcase")
runApp()
shiny::runApp(display.mode="showcase")
shiny::runApp(display.mode="showcase")
getwd()
runApp(appDir = getwd())
runApp(appDir = getwd())
runApp()
runApp()
runApp()
runApp(display.mode="showcase")
runApp(display.mode="showcase")
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
?textInput
runApp()
runApp()
runApp()
paramparameters
parameters
list(parameters)
split(parameters, names(parameters))
split(parameters)
split(parameters, parameters)
split(values(parameters), names(parameters))
split(unname(parameters), names(parameters))
runApp()
runApp()
?toJSON
shiny::runApp()
